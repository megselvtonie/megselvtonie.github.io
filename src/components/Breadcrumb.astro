---
// filepath: /src/components/Breadcrumb.astro
import { getCollection } from "astro:content";

type Crumb = { label: string; href?: string };

// Hjelpefunksjon: gjør første bokstav stor
function capitalizeFirst(str: string): string {
  if (!str) return str;
  return str.charAt(0).toUpperCase() + str.slice(1);
}

const { pathname } = Astro.url;
const parts = pathname.split("/").filter(Boolean);

let games: any[] = [];
let recipes: any[] = [];

if (parts[0] === "spill") {
  games = await getCollection("games");
}
if (parts[0] === "oppskrifter") {
  recipes = await getCollection("oppskrifter");
}

// Kart med pene navn og spesielle lenker
const routes: Record<string, { label: string; href?: string }> = {
  about: { label: "Om meg" },
  nettsiden: { label: "Om nettsiden" },
  wip: { label: "Werk i progress" },
  spilloteket: { label: "Spilloteket" },
  kokebok: { label: "Kokeboka" },
  oppskrifter: { label: "Kokeboka", href: "/kokeboka/" },
  spill: { label: "Spilloteket", href: "/spilloteket/" },
};

const items: Crumb[] =
  pathname === "/" ? [{ label: "Forside" }] : [{ label: "Forside", href: "/" }];

// Bygg breadcrumb
for (let i = 0; i < parts.length; i++) {
  const part = parts[i];
  const isLast = i === parts.length - 1;
  let label = decodeURIComponent(part);
  let href: string | undefined;

  // Bruk kartet hvis vi kjenner delen
  if (routes[part]) {
    label = routes[part].label;
    href = routes[part].href;
  } else {
    // ellers kapitaliser første bokstav
    label = capitalizeFirst(label);
  }

  // Spill → hent tittel fra frontmatter
  if (parts[0] === "spill" && isLast) {
    const game = games.find((g) => g.slug === part);
    if (game) label = game.data.title;
  }

  // Oppskrifter → hent tittel fra frontmatter
  if (parts[0] === "oppskrifter" && isLast) {
    const recipe = recipes.find((r) => r.slug === part);
    if (recipe) label = recipe.data.title;
  }

  // Standard lenke for mellomnivåer
  if (!href && !isLast) {
    href = "/" + parts.slice(0, i + 1).join("/") + "/";
  }

  items.push(isLast ? { label } : { label, href });
}
---

<nav aria-label="Brødsmulesti" class="breadcrumb">
  <ol>
    {items.map((item, i) => (
      <li>
        {item.href ? (
          <a href={item.href}>{item.label}</a>
        ) : (
          <span class="current">{item.label}</span>
        )}
        {i < items.length - 1 && <span class="separator">/</span>}
      </li>
    ))}
  </ol>
</nav>




<style>
  .breadcrumb {
    font-size: 0.875rem; /* ca 14px */
    margin: 0.25rem 0 0.5rem;
    font-family: system-ui, sans-serif;
  }

  .breadcrumb ol {
    list-style: none;
    font-size: 14px;
    display: flex;
    gap: 0.25rem;
    padding: 0;
    margin: 0;
    flex-wrap: wrap;
  }

  .breadcrumb a {
    color: rgb(0, 102, 204); /* blå lenker */
    text-decoration: none;
    font-weight: normal;
  }
  .breadcrumb a:hover {
    text-decoration: underline;
  }

  .breadcrumb .current {
    color: #000; /* nåværende side */
    font-weight: normal;
  }

  .separator {
    color: #aaa; /* nedtonet separator */
    margin: 0 0.25rem;
  }
</style>